version: '3.8'

services:
  postgres:
    image: postgres:14.19-alpine3.21
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DB_HOST: postgres
      DB_NAME: userdb
      DB_USER: postgres
      DB_PASSWORD: password
      DB_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/app  # Mount source code for live reload
    command: ["python", "-m", "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
    depends_on:
      - app
    restart: unless-stopped
    volumes:
      - ./frontend/src:/app/src  # Mount source for live reload
      - ./frontend/public:/app/public  # Mount public files
      - /app/node_modules  # Exclude node_modules
    stdin_open: true
    tty: true

volumes:
  postgres_data: